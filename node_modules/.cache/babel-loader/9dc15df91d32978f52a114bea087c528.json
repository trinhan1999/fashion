{"ast":null,"code":"var _jsxFileName = \"E:\\\\D\\\\admin\\\\src\\\\components\\\\NotificationCenter\\\\NotificationCenter.js\";\nimport React, { useState } from 'react';\nimport { formatPrice, getStocks, getWeather, getWeatherIcon } from '../../helpers';\nimport { mockNotifications, mockStats, mockTodo } from '../../utils/mock';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PropTypes from 'prop-types';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport classNames from 'classnames';\nimport format from 'date-fns/format';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { notificationCenterWidth } from '../../styleVariables';\nimport useMountEffect from '../../mountEffect';\nconst useStyles = makeStyles(theme => ({\n  drawerPaper: {\n    width: notificationCenterWidth,\n    maxWidth: notificationCenterWidth,\n    [theme.breakpoints.down('sm')]: {\n      top: '56px!important',\n      height: 'calc(100vh - 56px)'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px!important',\n      height: 'calc(100vh - 64px)'\n    },\n    zIndex: theme.zIndex.drawer + 99\n  },\n  modal: {\n    [theme.breakpoints.down('sm')]: {\n      top: '56px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px'\n    },\n    zIndex: theme.zIndex.drawer + 99\n  },\n  backdrop: {\n    [theme.breakpoints.down('sm')]: {\n      top: '56px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px'\n    }\n  },\n  container: {\n    position: 'relative',\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    zIndex: 1,\n    flexGrow: 1\n  },\n  tabsRoot: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  tabRoot: {\n    textTransform: 'initial',\n    minWidth: '50%',\n    color: theme.palette.text.primary\n  },\n  padding: {\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(1) * 2,\n      paddingRight: theme.spacing(1) * 2,\n      paddingTop: theme.spacing(1) * 2,\n      paddingBottom: theme.spacing(1) * 2\n    },\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(1) * 3,\n      paddingRight: theme.spacing(1) * 3,\n      paddingTop: theme.spacing(1) * 2,\n      paddingBottom: theme.spacing(1) * 2\n    }\n  }\n}));\n\nconst NotificationCenter = ({\n  notificationsOpen,\n  toogleNotifications\n}) => {\n  const classes = useStyles();\n  const [tab, setTab] = useState(1);\n  const [stocks, setStocks] = useState(undefined);\n  const [forecast, setForecast] = useState(undefined);\n  const [today] = useState(Date.now());\n\n  const handleTabToggle = (event, tab) => setTab(tab);\n\n  useMountEffect(() => {\n    (async function () {\n      try {\n        const forecast = await getWeather('london', 'uk', 1);\n        const stocks = await getStocks('MSFT,FB,AAPL,GOOG,DAX');\n\n        if (forecast) {\n          setForecast(forecast);\n        }\n\n        if (stocks && stocks['Stock Quotes']) {\n          setStocks(stocks);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  });\n  return /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: notificationsOpen,\n    ModalProps: {\n      keepMounted: false,\n      className: classes.modal,\n      BackdropProps: {\n        className: classes.backdrop\n      },\n      onBackdropClick: toogleNotifications\n    },\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tab,\n    onChange: handleTabToggle,\n    classes: {\n      root: classes.tabsRoot,\n      indicator: classes.tabsIndicator\n    },\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    classes: {\n      root: classes.tabRoot\n    },\n    label: \"Today\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    classes: {\n      root: classes.tabRoot\n    },\n    label: \"Notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, tab === 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.padding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, format(today, 'dddd')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, format(today, 'MMM Do YY'))), stocks && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    component: \"nav\",\n    subheader: /*#__PURE__*/React.createElement(ListSubheader, {\n      disableSticky: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"Stocks\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, stocks['Stock Quotes'].map((stock, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: stock['1. symbol'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    className: \"mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, formatPrice(stock['2. price']))))))), forecast && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    subheader: /*#__PURE__*/React.createElement(ListSubheader, {\n      disableSticky: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, \"Weather\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: forecast.city.country,\n    secondary: forecast.city.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    className: \"mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n    className: classNames(getWeatherIcon(forecast.list[0].weather[0].icon), 'text-lg mx-1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }), forecast.list[0].main.temp)))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    subheader: /*#__PURE__*/React.createElement(ListSubheader, {\n      disableSticky: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 26\n      }\n    }, \"Tasks\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, mockTodo.map((todo, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: todo.title,\n    secondary: todo.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    subheader: /*#__PURE__*/React.createElement(ListSubheader, {\n      disableSticky: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 26\n      }\n    }, \"Stats\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, mockStats.map((stat, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.padding,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, stat.title), /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: stat.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }))))), tab === 1 && /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, mockNotifications.map((notification, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, notification.avatar, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: notification.title,\n    secondary: notification.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nNotificationCenter.propTypes = {\n  notificationsOpen: PropTypes.bool,\n  toogleNotifications: PropTypes.func\n};\nexport default NotificationCenter;","map":{"version":3,"sources":["E:/D/admin/src/components/NotificationCenter/NotificationCenter.js"],"names":["React","useState","formatPrice","getStocks","getWeather","getWeatherIcon","mockNotifications","mockStats","mockTodo","Divider","Drawer","LinearProgress","List","ListItem","ListItemSecondaryAction","ListItemText","ListSubheader","PropTypes","Tab","Tabs","Typography","classNames","format","makeStyles","notificationCenterWidth","useMountEffect","useStyles","theme","drawerPaper","width","maxWidth","breakpoints","down","top","height","up","zIndex","drawer","modal","backdrop","container","position","overflowX","overflowY","flexGrow","tabsRoot","borderBottom","palette","divider","tabRoot","textTransform","minWidth","color","text","primary","padding","paddingLeft","spacing","paddingRight","paddingTop","paddingBottom","NotificationCenter","notificationsOpen","toogleNotifications","classes","tab","setTab","stocks","setStocks","undefined","forecast","setForecast","today","Date","now","handleTabToggle","event","e","console","error","keepMounted","className","BackdropProps","onBackdropClick","paper","root","indicator","tabsIndicator","map","stock","index","city","country","name","list","weather","icon","main","temp","todo","title","subtitle","stat","value","notification","avatar","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  formatPrice,\n  getStocks,\n  getWeather,\n  getWeatherIcon\n} from '../../helpers';\nimport { mockNotifications, mockStats, mockTodo } from '../../utils/mock';\n\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PropTypes from 'prop-types';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport classNames from 'classnames';\nimport format from 'date-fns/format';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { notificationCenterWidth } from '../../styleVariables';\nimport useMountEffect from '../../mountEffect';\n\nconst useStyles = makeStyles(theme => ({\n  drawerPaper: {\n    width: notificationCenterWidth,\n    maxWidth: notificationCenterWidth,\n    [theme.breakpoints.down('sm')]: {\n      top: '56px!important',\n      height: 'calc(100vh - 56px)'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px!important',\n      height: 'calc(100vh - 64px)'\n    },\n    zIndex: theme.zIndex.drawer + 99\n  },\n  modal: {\n    [theme.breakpoints.down('sm')]: {\n      top: '56px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px'\n    },\n    zIndex: theme.zIndex.drawer + 99\n  },\n  backdrop: {\n    [theme.breakpoints.down('sm')]: {\n      top: '56px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px'\n    }\n  },\n  container: {\n    position: 'relative',\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    zIndex: 1,\n    flexGrow: 1\n  },\n  tabsRoot: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  tabRoot: {\n    textTransform: 'initial',\n    minWidth: '50%',\n    color: theme.palette.text.primary\n  },\n  padding: {\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(1) * 2,\n      paddingRight: theme.spacing(1) * 2,\n      paddingTop: theme.spacing(1) * 2,\n      paddingBottom: theme.spacing(1) * 2\n    },\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(1) * 3,\n      paddingRight: theme.spacing(1) * 3,\n      paddingTop: theme.spacing(1) * 2,\n      paddingBottom: theme.spacing(1) * 2\n    }\n  }\n}));\n\nconst NotificationCenter = ({ notificationsOpen, toogleNotifications }) => {\n  const classes = useStyles();\n  const [tab, setTab] = useState(1);\n  const [stocks, setStocks] = useState(undefined);\n  const [forecast, setForecast] = useState(undefined);\n  const [today] = useState(Date.now());\n\n  const handleTabToggle = (event, tab) => setTab(tab);\n\n  useMountEffect(() => {\n    (async function() {\n      try {\n        const forecast = await getWeather('london', 'uk', 1);\n        const stocks = await getStocks('MSFT,FB,AAPL,GOOG,DAX');\n\n        if (forecast) {\n          setForecast(forecast);\n        }\n        if (stocks && stocks['Stock Quotes']) {\n          setStocks(stocks);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  });\n\n  return (\n    <Drawer\n      variant=\"temporary\"\n      anchor=\"right\"\n      open={notificationsOpen}\n      ModalProps={{\n        keepMounted: false,\n        className: classes.modal,\n        BackdropProps: {\n          className: classes.backdrop\n        },\n        onBackdropClick: toogleNotifications\n      }}\n      classes={{\n        paper: classes.drawerPaper\n      }}\n    >\n      <Tabs\n        value={tab}\n        onChange={handleTabToggle}\n        classes={{ root: classes.tabsRoot, indicator: classes.tabsIndicator }}\n        centered\n      >\n        <Tab classes={{ root: classes.tabRoot }} label=\"Today\" />\n        <Tab classes={{ root: classes.tabRoot }} label=\"Notifications\" />\n      </Tabs>\n      <div className={classes.container}>\n        {tab === 0 && (\n          <>\n            <div className={classes.padding}>\n              <Typography variant=\"h6\" gutterBottom>\n                {format(today, 'dddd')}\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {format(today, 'MMM Do YY')}\n              </Typography>\n            </div>\n            {stocks && (\n              <>\n                <Divider />\n                <List\n                  component=\"nav\"\n                  subheader={\n                    <ListSubheader disableSticky>Stocks</ListSubheader>\n                  }\n                >\n                  {stocks['Stock Quotes'].map((stock, index) => (\n                    <ListItem button key={index}>\n                      <ListItemText primary={stock['1. symbol']} />\n                      <ListItemSecondaryAction className=\"mx-1\">\n                        <Typography variant=\"caption\">\n                          {formatPrice(stock['2. price'])}\n                        </Typography>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  ))}\n                </List>\n              </>\n            )}\n            {forecast && (\n              <>\n                <Divider />\n                <List\n                  subheader={\n                    <ListSubheader disableSticky>Weather</ListSubheader>\n                  }\n                >\n                  <ListItem button>\n                    <ListItemText\n                      primary={forecast.city.country}\n                      secondary={forecast.city.name}\n                    />\n                    <ListItemSecondaryAction className=\"mx-1\">\n                      <Typography variant=\"h6\">\n                        {\n                          <>\n                            <i\n                              className={classNames(\n                                getWeatherIcon(\n                                  forecast.list[0].weather[0].icon\n                                ),\n                                'text-lg mx-1'\n                              )}\n                            />\n                            {forecast.list[0].main.temp}\n                          </>\n                        }\n                      </Typography>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                </List>\n              </>\n            )}\n            <Divider />\n            <List\n              subheader={<ListSubheader disableSticky>Tasks</ListSubheader>}\n            >\n              {mockTodo.map((todo, index) => (\n                <ListItem button key={index}>\n                  <ListItemText\n                    primary={todo.title}\n                    secondary={todo.subtitle}\n                  />\n                </ListItem>\n              ))}\n            </List>\n            <Divider />\n            <List\n              subheader={<ListSubheader disableSticky>Stats</ListSubheader>}\n            >\n              {mockStats.map((stat, index) => (\n                <div className={classes.padding} key={index}>\n                  <Typography variant=\"caption\">{stat.title}</Typography>\n                  <LinearProgress variant=\"determinate\" value={stat.value} />\n                </div>\n              ))}\n            </List>\n          </>\n        )}\n        {tab === 1 && (\n          <List>\n            {mockNotifications.map((notification, index) => (\n              <ListItem button key={index}>\n                {notification.avatar}\n                <ListItemText\n                  primary={notification.title}\n                  secondary={notification.subtitle}\n                />\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </div>\n    </Drawer>\n  );\n};\n\nNotificationCenter.propTypes = {\n  notificationsOpen: PropTypes.bool,\n  toogleNotifications: PropTypes.func\n};\n\nexport default NotificationCenter;\n"]},"metadata":{},"sourceType":"module"}