{"ast":null,"code":"var _jsxFileName = \"D:\\\\admin\\\\src\\\\pages\\\\Taskboard\\\\Taskboard.js\";\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport React, { useState } from 'react';\nimport { infoColor, warningColor } from '../../styleVariables';\nimport reorder, { reorderQuoteMap } from './reorder';\nimport Column from './Column';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { mockTaskboard } from '../../utils/mock';\nconst useStyles = makeStyles(theme => ({\n  taskboard: {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap',\n    [theme.breakpoints.down('sm')]: {\n      height: 'calc(100vh - 56px)'\n    },\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100vh - 64px)'\n    }\n  },\n  wrapper: {\n    width: '280px',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingRight: theme.spacing(1) / 2,\n    paddingLeft: theme.spacing(1) / 2,\n    boxSizing: 'border-box',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    height: '100%'\n  },\n  list: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '100%',\n    whiteSpace: 'normal',\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    borderRadius: theme.shape.borderRadius\n  },\n  header: {\n    position: 'relative',\n    flexDirection: 'row',\n    alignItems: 'center',\n    letterSpacing: '0.02rem',\n    padding: theme.spacing(1),\n    margin: 0,\n    fontWeight: 500,\n    textTransform: 'uppercase',\n    fontSize: '12px'\n  },\n  task: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.primary,\n    background: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    '&:last-child': {\n      marginBottom: 0\n    },\n    '&:hover': {\n      cursor: 'grab'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      border: '4px solid transparent',\n      top: 0,\n      borderTopWidth: '12px',\n      borderBottomColor: 'transparent',\n      right: '6px'\n    }\n  },\n  success: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  info: {\n    '&::after': {\n      borderTopColor: infoColor,\n      borderRightColor: infoColor,\n      borderLeftColor: infoColor\n    }\n  },\n  warning: {\n    '&::after': {\n      borderTopColor: warningColor,\n      borderRightColor: warningColor,\n      borderLeftColor: warningColor\n    }\n  },\n  danger: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  cards: {\n    position: 'relative',\n    padding: `0 ${theme.spacing(1)}px ${theme.spacing(1)}px`,\n    boxSizing: 'border-box',\n    height: '100%',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }\n}));\n\nconst Taskboard = () => {\n  const classes = useStyles();\n  const [columns, setColumns] = useState(mockTaskboard);\n  const [ordered, setOrdered] = useState(Object.keys(mockTaskboard));\n\n  const onDragEnd = result => {\n    // dropped nowhere\n    if (!result.destination) {\n      return;\n    }\n\n    const source = result.source;\n    const destination = result.destination; // did not move anywhere - can bail early\n\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    } // reordering column\n\n\n    if (result.type === 'COLUMN') {\n      const orderedList = reorder(ordered, source.index, destination.index);\n      setOrdered(orderedList);\n      return;\n    }\n\n    const data = reorderQuoteMap({\n      quoteMap: columns,\n      source,\n      destination\n    });\n    setColumns(data.quoteMap);\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"taskboard\",\n    type: \"COLUMN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    className: classes.taskboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }), ordered.map((key, index) => /*#__PURE__*/React.createElement(Column, {\n    key: key,\n    index: index,\n    title: key,\n    tasks: columns[key],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Taskboard;","map":{"version":3,"sources":["D:/admin/src/pages/Taskboard/Taskboard.js"],"names":["DragDropContext","Droppable","React","useState","infoColor","warningColor","reorder","reorderQuoteMap","Column","makeStyles","mockTaskboard","useStyles","theme","taskboard","overflowX","overflowY","whiteSpace","breakpoints","down","height","up","wrapper","width","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","boxSizing","display","verticalAlign","list","flexDirection","maxHeight","backgroundColor","borderRadius","shape","header","position","alignItems","letterSpacing","padding","margin","fontWeight","textTransform","fontSize","task","boxShadow","shadows","color","palette","text","primary","background","paper","marginBottom","cursor","content","border","top","borderTopWidth","borderBottomColor","right","success","borderTopColor","secondary","main","borderRightColor","borderLeftColor","info","warning","danger","cards","Taskboard","classes","columns","setColumns","ordered","setOrdered","Object","keys","onDragEnd","result","destination","source","droppableId","index","type","orderedList","data","quoteMap","provided","innerRef","droppableProps","map","key"],"mappings":"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","sourcesContent":["import { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport React, { useState } from 'react';\nimport { infoColor, warningColor } from '../../styleVariables';\nimport reorder, { reorderQuoteMap } from './reorder';\n\nimport Column from './Column';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { mockTaskboard } from '../../utils/mock';\n\nconst useStyles = makeStyles(theme => ({\n  taskboard: {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap',\n    [theme.breakpoints.down('sm')]: {\n      height: 'calc(100vh - 56px)'\n    },\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100vh - 64px)'\n    }\n  },\n  wrapper: {\n    width: '280px',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingRight: theme.spacing(1) / 2,\n    paddingLeft: theme.spacing(1) / 2,\n    boxSizing: 'border-box',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    height: '100%'\n  },\n  list: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '100%',\n    whiteSpace: 'normal',\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    borderRadius: theme.shape.borderRadius\n  },\n  header: {\n    position: 'relative',\n    flexDirection: 'row',\n    alignItems: 'center',\n    letterSpacing: '0.02rem',\n    padding: theme.spacing(1),\n    margin: 0,\n    fontWeight: 500,\n    textTransform: 'uppercase',\n    fontSize: '12px'\n  },\n  task: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.primary,\n    background: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    '&:last-child': {\n      marginBottom: 0\n    },\n    '&:hover': {\n      cursor: 'grab'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      border: '4px solid transparent',\n      top: 0,\n      borderTopWidth: '12px',\n      borderBottomColor: 'transparent',\n      right: '6px'\n    }\n  },\n  success: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  info: {\n    '&::after': {\n      borderTopColor: infoColor,\n      borderRightColor: infoColor,\n      borderLeftColor: infoColor\n    }\n  },\n  warning: {\n    '&::after': {\n      borderTopColor: warningColor,\n      borderRightColor: warningColor,\n      borderLeftColor: warningColor\n    }\n  },\n  danger: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  cards: {\n    position: 'relative',\n    padding: `0 ${theme.spacing(1)}px ${theme.spacing(1)}px`,\n    boxSizing: 'border-box',\n    height: '100%',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }\n}));\n\nconst Taskboard = () => {\n  const classes = useStyles();\n  const [columns, setColumns] = useState(mockTaskboard);\n  const [ordered, setOrdered] = useState(Object.keys(mockTaskboard));\n\n  const onDragEnd = result => {\n    // dropped nowhere\n    if (!result.destination) {\n      return;\n    }\n\n    const source = result.source;\n    const destination = result.destination;\n\n    // did not move anywhere - can bail early\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n\n    // reordering column\n    if (result.type === 'COLUMN') {\n      const orderedList = reorder(ordered, source.index, destination.index);\n      setOrdered(orderedList);\n      return;\n    }\n\n    const data = reorderQuoteMap({\n      quoteMap: columns,\n      source,\n      destination\n    });\n\n    setColumns(data.quoteMap);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"taskboard\" type=\"COLUMN\">\n        {provided => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            className={classes.taskboard}\n          >\n            {ordered.map((key, index) => (\n              <Column\n                key={key}\n                index={index}\n                title={key}\n                tasks={columns[key]}\n              />\n            ))}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Taskboard;\n"]},"metadata":{},"sourceType":"module"}