{"ast":null,"code":"var _jsxFileName = \"E:\\\\D\\\\admin\\\\src\\\\utils\\\\demos\\\\steppers\\\\HorizontalLinearStepper.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    width: '90%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n});\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n\n    case 1:\n      return 'What is an ad group anyways?';\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass HorizontalLinearStepper extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      skipped: new Set()\n    };\n\n    this.isStepOptional = step => {\n      return step === 1;\n    };\n\n    this.handleNext = () => {\n      const {\n        activeStep\n      } = this.state;\n      let {\n        skipped\n      } = this.state;\n\n      if (this.isStepSkipped(activeStep)) {\n        skipped = new Set(skipped.values());\n        skipped.delete(activeStep);\n      }\n\n      this.setState({\n        activeStep: activeStep + 1,\n        skipped\n      });\n    };\n\n    this.handleBack = () => {\n      const {\n        activeStep\n      } = this.state;\n      this.setState({\n        activeStep: activeStep - 1\n      });\n    };\n\n    this.handleSkip = () => {\n      const {\n        activeStep\n      } = this.state;\n\n      if (!this.isStepOptional(activeStep)) {\n        // You probably want to guard against something like this,\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n\n      this.setState(state => {\n        const skipped = new Set(state.skipped.values());\n        skipped.add(activeStep);\n        return {\n          activeStep: state.activeStep + 1,\n          skipped\n        };\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        activeStep: 0\n      });\n    };\n  }\n\n  isStepSkipped(step) {\n    return this.state.skipped.has(step);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const steps = getSteps();\n    const {\n      activeStep\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Stepper, {\n      activeStep: activeStep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, steps.map((label, index) => {\n      const props = {};\n      const labelProps = {};\n\n      if (this.isStepOptional(index)) {\n        labelProps.optional = /*#__PURE__*/React.createElement(Typography, {\n          variant: \"caption\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }\n        }, \"Optional\");\n      }\n\n      if (this.isStepSkipped(index)) {\n        props.completed = false;\n      }\n\n      return /*#__PURE__*/React.createElement(Step, Object.assign({\n        key: label\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(StepLabel, Object.assign({}, labelProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }), label));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, activeStep === steps.length ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.instructions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"All steps completed - you\\\"re finished\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleReset,\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.instructions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, getStepContent(activeStep)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: activeStep === 0,\n      onClick: this.handleBack,\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Back\"), this.isStepOptional(activeStep) && /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSkip,\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, \"Skip\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleNext,\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n  }\n\n}\n\nHorizontalLinearStepper.propTypes = {\n  classes: PropTypes.object\n};\nexport default withStyles(styles)(HorizontalLinearStepper);","map":{"version":3,"sources":["E:/D/admin/src/utils/demos/steppers/HorizontalLinearStepper.js"],"names":["React","PropTypes","withStyles","Stepper","Step","StepLabel","Button","Typography","styles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","HorizontalLinearStepper","Component","state","activeStep","skipped","Set","isStepOptional","handleNext","isStepSkipped","values","delete","setState","handleBack","handleSkip","Error","add","handleReset","has","render","classes","props","steps","map","label","index","labelProps","optional","completed","length","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n});\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass HorizontalLinearStepper extends React.Component {\n  state = {\n    activeStep: 0,\n    skipped: new Set(),\n  };\n\n  isStepOptional = step => {\n    return step === 1;\n  };\n\n  handleNext = () => {\n    const { activeStep } = this.state;\n    let { skipped } = this.state;\n    if (this.isStepSkipped(activeStep)) {\n      skipped = new Set(skipped.values());\n      skipped.delete(activeStep);\n    }\n    this.setState({\n      activeStep: activeStep + 1,\n      skipped,\n    });\n  };\n\n  handleBack = () => {\n    const { activeStep } = this.state;\n    this.setState({\n      activeStep: activeStep - 1,\n    });\n  };\n\n  handleSkip = () => {\n    const { activeStep } = this.state;\n    if (!this.isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    this.setState(state => {\n      const skipped = new Set(state.skipped.values());\n      skipped.add(activeStep);\n      return {\n        activeStep: state.activeStep + 1,\n        skipped,\n      };\n    });\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n    });\n  };\n\n  isStepSkipped(step) {\n    return this.state.skipped.has(step);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const steps = getSteps();\n    const { activeStep } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <Stepper activeStep={activeStep}>\n          {steps.map((label, index) => {\n            const props = {};\n            const labelProps = {};\n            if (this.isStepOptional(index)) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (this.isStepSkipped(index)) {\n              props.completed = false;\n            }\n            return (\n              <Step key={label} {...props}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&quot;re finished\n              </Typography>\n              <Button onClick={this.handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={this.handleBack}\n                  className={classes.button}\n                >\n                  Back\n                </Button>\n                {this.isStepOptional(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleSkip}\n                    className={classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.handleNext}\n                  className={classes.button}\n                >\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nHorizontalLinearStepper.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(HorizontalLinearStepper);\n"]},"metadata":{},"sourceType":"module"}