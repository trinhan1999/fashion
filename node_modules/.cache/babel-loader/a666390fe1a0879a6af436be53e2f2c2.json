{"ast":null,"code":"var _jsxFileName = \"E:\\\\D\\\\admin\\\\src\\\\pages\\\\Apps\\\\Messages.js\";\nimport { Message, Wrapper } from '../../components';\nimport React, { Fragment, useState } from 'react';\nimport { mockFolders, mockFolders2, mockMessages, mockTags } from '../../utils/mock';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { drawerWidth } from '../../styleVariables';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 100\n  },\n  toolBar: {\n    paddingLeft: theme.spacing(1) / 2,\n    paddingRight: theme.spacing(1) / 2\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth,\n    maxWidth: drawerWidth,\n    zIndex: theme.zIndex.drawer + 3,\n    [theme.breakpoints.up('md')]: {\n      backgroundColor: 'transparent'\n    },\n    [theme.breakpoints.down('sm')]: {\n      top: '0',\n      height: 'calc(100vh - 56px)'\n    },\n    border: 0,\n    height: 'auto'\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    minWidth: 0\n  },\n  modal: {\n    [theme.breakpoints.down('sm')]: {\n      top: '56px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px'\n    },\n    zIndex: '1000'\n  },\n  backdrop: {\n    [theme.breakpoints.down('sm')]: {\n      top: '56px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px'\n    }\n  }\n}));\n\nconst Messages = () => {\n  const classes = useStyles();\n  const [opened, setOpened] = useState(false);\n\n  const handleDrawerToggle = () => setOpened(!opened);\n\n  const menu = /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, mockFolders), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, mockFolders2), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, mockTags));\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    padding: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: () => handleDrawerToggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Messages\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"permanent\",\n    ModalProps: {\n      keepMounted: false,\n      className: classes.modal,\n      BackdropProps: {\n        className: classes.backdrop\n      },\n      onBackdropClick: handleDrawerToggle\n    },\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, menu)), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    open: opened,\n    ModalProps: {\n      keepMounted: false,\n      className: classes.modal,\n      BackdropProps: {\n        className: classes.backdrop\n      },\n      onBackdropClick: handleDrawerToggle\n    },\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, menu)), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    messages: mockMessages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Messages;","map":{"version":3,"sources":["E:/D/admin/src/pages/Apps/Messages.js"],"names":["Message","Wrapper","React","Fragment","useState","mockFolders","mockFolders2","mockMessages","mockTags","AppBar","Divider","Drawer","Hidden","IconButton","List","MenuIcon","Toolbar","Typography","drawerWidth","makeStyles","useStyles","theme","root","flexGrow","overflow","position","display","appBar","zIndex","drawer","toolBar","paddingLeft","spacing","paddingRight","drawerPaper","width","maxWidth","breakpoints","up","backgroundColor","down","top","height","border","content","palette","background","default","padding","minWidth","modal","backdrop","Messages","classes","opened","setOpened","handleDrawerToggle","menu","keepMounted","className","BackdropProps","onBackdropClick","paper"],"mappings":"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","sourcesContent":["import { Message, Wrapper } from '../../components';\nimport React, { Fragment, useState } from 'react';\nimport {\n  mockFolders,\n  mockFolders2,\n  mockMessages,\n  mockTags\n} from '../../utils/mock';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { drawerWidth } from '../../styleVariables';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 100\n  },\n  toolBar: {\n    paddingLeft: theme.spacing(1) / 2,\n    paddingRight: theme.spacing(1) / 2\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth,\n    maxWidth: drawerWidth,\n    zIndex: theme.zIndex.drawer + 3,\n    [theme.breakpoints.up('md')]: {\n      backgroundColor: 'transparent'\n    },\n    [theme.breakpoints.down('sm')]: {\n      top: '0',\n      height: 'calc(100vh - 56px)'\n    },\n    border: 0,\n    height: 'auto'\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    minWidth: 0\n  },\n  modal: {\n    [theme.breakpoints.down('sm')]: {\n      top: '56px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px'\n    },\n    zIndex: '1000'\n  },\n  backdrop: {\n    [theme.breakpoints.down('sm')]: {\n      top: '56px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      top: '64px'\n    }\n  }\n}));\n\nconst Messages = () => {\n  const classes = useStyles();\n  const [opened, setOpened] = useState(false);\n\n  const handleDrawerToggle = () => setOpened(!opened);\n\n  const menu = (\n    <Fragment>\n      <List>{mockFolders}</List>\n      <Divider />\n      <List>{mockFolders2}</List>\n      <Divider />\n      <List>{mockTags}</List>\n    </Fragment>\n  );\n\n  return (\n    <Wrapper padding={false}>\n      <Hidden mdUp>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar className={classes.toolBar}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={() => handleDrawerToggle()}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Messages\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Hidden>\n      <div className={classes.root}>\n        <Hidden smDown>\n          <Drawer\n            variant=\"permanent\"\n            ModalProps={{\n              keepMounted: false,\n              className: classes.modal,\n              BackdropProps: {\n                className: classes.backdrop\n              },\n              onBackdropClick: handleDrawerToggle\n            }}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            {menu}\n          </Drawer>\n        </Hidden>\n\n        <Hidden mdUp>\n          <Drawer\n            variant=\"temporary\"\n            open={opened}\n            ModalProps={{\n              keepMounted: false,\n              className: classes.modal,\n              BackdropProps: {\n                className: classes.backdrop\n              },\n              onBackdropClick: handleDrawerToggle\n            }}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            {menu}\n          </Drawer>\n        </Hidden>\n\n        <main className={classes.content}>\n          <Message messages={mockMessages} />\n        </main>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}