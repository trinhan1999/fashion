{"ast":null,"code":"var _jsxFileName = \"E:\\\\D\\\\admin\\\\src\\\\components\\\\Sidebar\\\\SidebarItem.js\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { capitalize } from '../../helpers';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMountEffect from '../../mountEffect';\nconst useStyles = makeStyles(theme => ({\n  badge: {\n    width: '20px',\n    height: '20px',\n    display: 'flex',\n    zIndex: 1,\n    flexWrap: 'wrap',\n    fontSize: '0.75rem',\n    alignItems: 'center',\n    borderRadius: '50%',\n    alignContent: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  menuLink: {\n    position: 'relative',\n    display: 'block'\n  },\n  menuItem: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: theme.spacing(1) * 1.5,\n    paddingBottom: theme.spacing(1) * 1.5\n  },\n  menuIcon: {\n    marginLeft: theme.spacing(1) * 2,\n    marginRight: theme.spacing(1) * 2\n  },\n  menuSubItem: {\n    paddingLeft: '55px',\n    paddingRight: '55px',\n    paddingTop: theme.spacing(1) * 1.5,\n    paddingBottom: theme.spacing(1) * 1.5\n  },\n  menuCollapsed: {\n    backgroundColor: theme.palette.action.hover\n  },\n  menuActive: {\n    backgroundColor: theme.palette.action.hover\n  },\n  menuClosed: {\n    backgroundColor: 'transparent'\n  },\n  caret: {\n    marginLeft: theme.spacing(1) * 2,\n    marginRight: theme.spacing(1) * 2,\n    minWidth: 0\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  secondary: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  },\n  error: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText\n  }\n}));\n\nconst SidebarItem = ({\n  route,\n  index,\n  activeRoute,\n  toggleMenu,\n  currentPath\n}) => {\n  const classes = useStyles();\n  useMountEffect(() => {\n    if (!currentPath || activeRoute === index || route.path === '/') return;\n    toggleMenu(index);\n  });\n\n  const badge = badge => {\n    if (!badge) return;\n    const badgeClassName = classNames(classes.badge, {\n      [classes[`${badge.type}`]]: badge.type !== 'default'\n    });\n    return /*#__PURE__*/React.createElement(Typography, {\n      className: classNames(classes.badge, badgeClassName),\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, badge.value);\n  };\n\n  if (route.type === 'external') {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: route.path,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      key: index,\n      className: classes.menuLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      className: classes.menuItem,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(route.icon, {\n      className: classes.menuIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      className: \"flexSpacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, capitalize(route.name)), badge(route.badge)));\n  }\n\n  if (route.type === 'submenu') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: activeRoute === index ? classes.menuCollapsed : classes.menuClosed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      className: classes.menuItem,\n      button: true,\n      key: index,\n      onClick: () => toggleMenu(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(route.icon, {\n      className: classes.menuIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      className: \"flexSpacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, capitalize(route.name)), badge(route.badge), /*#__PURE__*/React.createElement(ListItemIcon, {\n      className: classes.caret,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, activeRoute === index ? /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Collapse, {\n      in: activeRoute === index ? true : false,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      disablePadding: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, route.children.map((subitem, index) => /*#__PURE__*/React.createElement(NavLink, {\n      to: `${route.path ? route.path : ''}${subitem.path ? subitem.path : ''}`,\n      exact: true,\n      className: classes.menuLink,\n      activeClassName: classes.menuActive,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      className: classes.menuSubItem,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      className: \"flexSpacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }, capitalize(subitem.name)), badge(subitem.badge)))))));\n  }\n\n  return /*#__PURE__*/React.createElement(NavLink, {\n    to: route.path,\n    exact: true,\n    className: classes.menuLink,\n    activeClassName: classes.menuActive,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.menuItem,\n    button: true,\n    onClick: () => toggleMenu(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(route.icon, {\n    className: classes.menuIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"flexSpacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, capitalize(route.name)), badge(route.badge)));\n};\n\nSidebarItem.prototypes = {\n  route: PropTypes.object,\n  index: PropTypes.number,\n  activeRoute: PropTypes.number,\n  toggleMenu: PropTypes.func\n};\nexport default SidebarItem;","map":{"version":3,"sources":["E:/D/admin/src/components/Sidebar/SidebarItem.js"],"names":["ArrowDropDownIcon","ArrowDropUpIcon","Collapse","List","ListItem","ListItemIcon","NavLink","PropTypes","React","Typography","capitalize","classNames","makeStyles","useMountEffect","useStyles","theme","badge","width","height","display","zIndex","flexWrap","fontSize","alignItems","borderRadius","alignContent","flexDirection","justifyContent","menuLink","position","menuItem","paddingLeft","paddingRight","paddingTop","spacing","paddingBottom","menuIcon","marginLeft","marginRight","menuSubItem","menuCollapsed","backgroundColor","palette","action","hover","menuActive","menuClosed","caret","minWidth","primary","main","color","contrastText","secondary","error","SidebarItem","route","index","activeRoute","toggleMenu","currentPath","classes","path","badgeClassName","type","value","name","children","map","subitem","prototypes","object","number","func"],"mappings":"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","sourcesContent":["import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { capitalize } from '../../helpers';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMountEffect from '../../mountEffect';\n\nconst useStyles = makeStyles(theme => ({\n  badge: {\n    width: '20px',\n    height: '20px',\n    display: 'flex',\n    zIndex: 1,\n    flexWrap: 'wrap',\n    fontSize: '0.75rem',\n    alignItems: 'center',\n    borderRadius: '50%',\n    alignContent: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  menuLink: {\n    position: 'relative',\n    display: 'block'\n  },\n  menuItem: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: theme.spacing(1) * 1.5,\n    paddingBottom: theme.spacing(1) * 1.5\n  },\n  menuIcon: {\n    marginLeft: theme.spacing(1) * 2,\n    marginRight: theme.spacing(1) * 2\n  },\n  menuSubItem: {\n    paddingLeft: '55px',\n    paddingRight: '55px',\n    paddingTop: theme.spacing(1) * 1.5,\n    paddingBottom: theme.spacing(1) * 1.5\n  },\n  menuCollapsed: {\n    backgroundColor: theme.palette.action.hover\n  },\n  menuActive: {\n    backgroundColor: theme.palette.action.hover\n  },\n  menuClosed: {\n    backgroundColor: 'transparent'\n  },\n  caret: {\n    marginLeft: theme.spacing(1) * 2,\n    marginRight: theme.spacing(1) * 2,\n    minWidth: 0\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  secondary: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  },\n  error: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText\n  }\n}));\n\nconst SidebarItem = ({\n  route,\n  index,\n  activeRoute,\n  toggleMenu,\n  currentPath\n}) => {\n  const classes = useStyles();\n\n  useMountEffect(() => {\n    if (!currentPath || activeRoute === index || route.path === '/') return;\n    toggleMenu(index);\n  });\n\n  const badge = badge => {\n    if (!badge) return;\n    const badgeClassName = classNames(classes.badge, {\n      [classes[`${badge.type}`]]: badge.type !== 'default'\n    });\n    return (\n      <Typography\n        className={classNames(classes.badge, badgeClassName)}\n        component=\"div\"\n      >\n        {badge.value}\n      </Typography>\n    );\n  };\n\n  if (route.type === 'external') {\n    return (\n      <a\n        href={route.path}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        key={index}\n        className={classes.menuLink}\n      >\n        <ListItem className={classes.menuItem} button>\n          <ListItemIcon>\n            <route.icon className={classes.menuIcon} />\n          </ListItemIcon>\n          <Typography variant=\"body1\" className=\"flexSpacer\">\n            {capitalize(route.name)}\n          </Typography>\n          {badge(route.badge)}\n        </ListItem>\n      </a>\n    );\n  }\n\n  if (route.type === 'submenu') {\n    return (\n      <div\n        className={\n          activeRoute === index ? classes.menuCollapsed : classes.menuClosed\n        }\n      >\n        <ListItem\n          className={classes.menuItem}\n          button\n          key={index}\n          onClick={() => toggleMenu(index)}\n        >\n          <ListItemIcon>\n            <route.icon className={classes.menuIcon} />\n          </ListItemIcon>\n          <Typography variant=\"body1\" className=\"flexSpacer\">\n            {capitalize(route.name)}\n          </Typography>\n          {badge(route.badge)}\n          <ListItemIcon className={classes.caret}>\n            {activeRoute === index ? (\n              <ArrowDropUpIcon />\n            ) : (\n              <ArrowDropDownIcon />\n            )}\n          </ListItemIcon>\n        </ListItem>\n        <Collapse\n          in={activeRoute === index ? true : false}\n          timeout=\"auto\"\n          unmountOnExit\n        >\n          <List disablePadding>\n            {route.children.map((subitem, index) => (\n              <NavLink\n                to={`${route.path ? route.path : ''}${\n                  subitem.path ? subitem.path : ''\n                }`}\n                exact\n                className={classes.menuLink}\n                activeClassName={classes.menuActive}\n                key={index}\n              >\n                <ListItem className={classes.menuSubItem} button>\n                  <Typography variant=\"body1\" className=\"flexSpacer\">\n                    {capitalize(subitem.name)}\n                  </Typography>\n                  {badge(subitem.badge)}\n                </ListItem>\n              </NavLink>\n            ))}\n          </List>\n        </Collapse>\n      </div>\n    );\n  }\n\n  return (\n    <NavLink\n      to={route.path}\n      exact\n      className={classes.menuLink}\n      activeClassName={classes.menuActive}\n      key={index}\n    >\n      <ListItem\n        className={classes.menuItem}\n        button\n        onClick={() => toggleMenu(index)}\n      >\n        <ListItemIcon>\n          <route.icon className={classes.menuIcon} />\n        </ListItemIcon>\n        <Typography variant=\"body1\" className=\"flexSpacer\">\n          {capitalize(route.name)}\n        </Typography>\n        {badge(route.badge)}\n      </ListItem>\n    </NavLink>\n  );\n};\n\nSidebarItem.prototypes = {\n  route: PropTypes.object,\n  index: PropTypes.number,\n  activeRoute: PropTypes.number,\n  toggleMenu: PropTypes.func\n};\n\nexport default SidebarItem;\n"]},"metadata":{},"sourceType":"module"}