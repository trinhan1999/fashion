{"ast":null,"code":"var _jsxFileName = \"D:\\\\admin\\\\src\\\\components\\\\ActivityStream\\\\ActivityStream.js\";\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  stream: {\n    padding: theme.spacing(1),\n    position: 'relative',\n    '&::before': {\n      content: '\"\"',\n      position: 'absolute',\n      top: '8px',\n      bottom: 0,\n      [theme.breakpoints.down('sm')]: {\n        left: '44px'\n      },\n      [theme.breakpoints.up('sm')]: {\n        left: '43px'\n      },\n      width: '1px',\n      backgroundColor: theme.palette.divider\n    }\n  },\n  card: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none'\n  },\n  content: {\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: '74px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: '80px'\n    }\n  }\n}));\n\nconst ActivityStream = ({\n  title,\n  stream\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stream,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, title)), stream.map((item, index) => /*#__PURE__*/React.createElement(Card, {\n    key: index,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: item.avatar,\n    title: item.title,\n    subheader: item.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, item.body)))));\n};\n\nActivityStream.propTypes = {\n  title: PropTypes.string.isRequired,\n  stream: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    avatar: PropTypes.element,\n    body: PropTypes.string\n  })).isRequired\n};\nexport default ActivityStream;","map":{"version":3,"sources":["D:/admin/src/components/ActivityStream/ActivityStream.js"],"names":["Button","Card","CardContent","CardHeader","PropTypes","React","Typography","makeStyles","useStyles","theme","stream","padding","spacing","position","content","top","bottom","breakpoints","down","left","up","width","backgroundColor","palette","divider","card","boxShadow","paddingLeft","ActivityStream","title","classes","map","item","index","avatar","subtitle","body","propTypes","string","isRequired","arrayOf","shape","element"],"mappings":"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","sourcesContent":["import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  stream: {\n    padding: theme.spacing(1),\n    position: 'relative',\n    '&::before': {\n      content: '\"\"',\n      position: 'absolute',\n      top: '8px',\n      bottom: 0,\n      [theme.breakpoints.down('sm')]: {\n        left: '44px'\n      },\n      [theme.breakpoints.up('sm')]: {\n        left: '43px'\n      },\n      width: '1px',\n      backgroundColor: theme.palette.divider\n    }\n  },\n  card: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none'\n  },\n  content: {\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: '74px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: '80px'\n    }\n  }\n}));\n\nconst ActivityStream = ({ title, stream }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.stream}>\n      <div className={classes.card}>\n        <Button variant=\"contained\" color=\"primary\">\n          {title}\n        </Button>\n      </div>\n\n      {stream.map((item, index) => (\n        <Card key={index} className={classes.card}>\n          <CardHeader\n            avatar={item.avatar}\n            title={item.title}\n            subheader={item.subtitle}\n          />\n          <CardContent className={classes.content}>\n            <Typography component=\"p\">{item.body}</Typography>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nActivityStream.propTypes = {\n  title: PropTypes.string.isRequired,\n  stream: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      subtitle: PropTypes.string,\n      avatar: PropTypes.element,\n      body: PropTypes.string\n    })\n  ).isRequired\n};\n\nexport default ActivityStream;\n"]},"metadata":{},"sourceType":"module"}