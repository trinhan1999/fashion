{"ast":null,"code":"var _jsxFileName = \"D:\\\\admin\\\\src\\\\utils\\\\demos\\\\progress\\\\LinearBuffer.js\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nconst styles = {\n  root: {\n    flexGrow: 1\n  }\n};\n\nclass LinearBuffer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.timer = null;\n    this.state = {\n      completed: 0,\n      buffer: 10\n    };\n\n    this.progress = () => {\n      const {\n        completed\n      } = this.state;\n\n      if (completed > 100) {\n        this.setState({\n          completed: 0,\n          buffer: 10\n        });\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        this.setState({\n          completed: completed + diff,\n          buffer: completed + diff + diff2\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 500);\n  }\n\n  UNSAFE_componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      completed,\n      buffer\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LinearProgress, {\n      variant: \"buffer\",\n      value: completed,\n      valueBuffer: buffer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LinearProgress, {\n      color: \"secondary\",\n      variant: \"buffer\",\n      value: completed,\n      valueBuffer: buffer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nLinearBuffer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(LinearBuffer);","map":{"version":3,"sources":["D:/admin/src/utils/demos/progress/LinearBuffer.js"],"names":["LinearProgress","PropTypes","React","withStyles","styles","root","flexGrow","LinearBuffer","Component","timer","state","completed","buffer","progress","setState","diff","Math","random","diff2","componentDidMount","setInterval","UNSAFE_componentWillUnmount","clearInterval","render","classes","props","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AADO,CAAf;;AAMA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC,IADiC;AAAA,SAGzCC,KAHyC,GAGjC;AACNC,MAAAA,SAAS,EAAE,CADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KAHiC;;AAAA,SAgBzCC,QAhByC,GAgB9B,MAAM;AACf,YAAM;AAAEF,QAAAA;AAAF,UAAgB,KAAKD,KAA3B;;AACA,UAAIC,SAAS,GAAG,GAAhB,EAAqB;AACnB,aAAKG,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAE,CAAb;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAAd;AACD,OAFD,MAEO;AACL,cAAMG,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA7B;AACA,cAAMC,KAAK,GAAGF,IAAI,CAACC,MAAL,KAAgB,EAA9B;AACA,aAAKH,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAEA,SAAS,GAAGI,IAAzB;AAA+BH,UAAAA,MAAM,EAAED,SAAS,GAAGI,IAAZ,GAAmBG;AAA1D,SAAd;AACD;AACF,KAzBwC;AAAA;;AAQzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,KAAL,GAAaW,WAAW,CAAC,KAAKP,QAAN,EAAgB,GAAhB,CAAxB;AACD;;AAEDQ,EAAAA,2BAA2B,GAAG;AAC5BC,IAAAA,aAAa,CAAC,KAAKb,KAAN,CAAb;AACD;;AAaDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,UAAM;AAAEd,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAwB,KAAKF,KAAnC;AACA,wBACE;AAAK,MAAA,SAAS,EAAEc,OAAO,CAACnB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAiC,MAAA,KAAK,EAAEM,SAAxC;AAAmD,MAAA,WAAW,EAAEC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,WAAtB;AAAkC,MAAA,OAAO,EAAC,QAA1C;AAAmD,MAAA,KAAK,EAAED,SAA1D;AAAqE,MAAA,WAAW,EAAEC,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AArCwC;;AAwC3CL,YAAY,CAACmB,SAAb,GAAyB;AACvBF,EAAAA,OAAO,EAAEvB,SAAS,CAAC0B,MAAV,CAAiBC;AADH,CAAzB;AAIA,eAAezB,UAAU,CAACC,MAAD,CAAV,CAAmBG,YAAnB,CAAf","sourcesContent":["import LinearProgress from '@material-ui/core/LinearProgress';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nclass LinearBuffer extends React.Component {\n  timer = null;\n\n  state = {\n    completed: 0,\n    buffer: 10,\n  };\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 500);\n  }\n\n  UNSAFE_componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    if (completed > 100) {\n      this.setState({ completed: 0, buffer: 10 });\n    } else {\n      const diff = Math.random() * 10;\n      const diff2 = Math.random() * 10;\n      this.setState({ completed: completed + diff, buffer: completed + diff + diff2 });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { completed, buffer } = this.state;\n    return (\n      <div className={classes.root}>\n        <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer} />\n        <br />\n        <LinearProgress color=\"secondary\" variant=\"buffer\" value={completed} valueBuffer={buffer} />\n      </div>\n    );\n  }\n}\n\nLinearBuffer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LinearBuffer);\n"]},"metadata":{},"sourceType":"module"}