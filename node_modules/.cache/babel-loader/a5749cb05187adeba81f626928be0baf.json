{"ast":null,"code":"var _jsxFileName = \"E:\\\\D\\\\admin\\\\src\\\\pages\\\\Taskboard\\\\TaskItem.js\";\nimport { infoColor, warningColor } from '../../styleVariables';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  taskboard: {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap',\n    [theme.breakpoints.down('sm')]: {\n      height: 'calc(100vh - 56px)'\n    },\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100vh - 64px)'\n    }\n  },\n  wrapper: {\n    width: '280px',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingRight: theme.spacing(1) / 2,\n    paddingLeft: theme.spacing(1) / 2,\n    boxSizing: 'border-box',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    height: '100%'\n  },\n  list: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '100%',\n    whiteSpace: 'normal',\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    borderRadius: theme.shape.borderRadius\n  },\n  header: {\n    position: 'relative',\n    flexDirection: 'row',\n    alignItems: 'center',\n    letterSpacing: '0.02rem',\n    padding: theme.spacing(1),\n    margin: 0,\n    fontWeight: 500,\n    textTransform: 'uppercase',\n    fontSize: '12px'\n  },\n  task: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.primary,\n    background: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    '&:last-child': {\n      marginBottom: 0\n    },\n    '&:hover': {\n      cursor: 'grab'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      border: '4px solid transparent',\n      top: 0,\n      borderTopWidth: '12px',\n      borderBottomColor: 'transparent',\n      right: '6px'\n    }\n  },\n  success: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  info: {\n    '&::after': {\n      borderTopColor: infoColor,\n      borderRightColor: infoColor,\n      borderLeftColor: infoColor\n    }\n  },\n  warning: {\n    '&::after': {\n      borderTopColor: warningColor,\n      borderRightColor: warningColor,\n      borderLeftColor: warningColor\n    }\n  },\n  danger: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  cards: {\n    position: 'relative',\n    padding: `0 ${theme.spacing(1)}px ${theme.spacing(1)}px`,\n    boxSizing: 'border-box',\n    height: '100%',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }\n}));\n\nconst TaskItem = ({\n  task,\n  isDragging,\n  provided\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classNames(classes.task, task.color ? classes[task.color] : ''),\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, task.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, task.description));\n};\n\nexport default TaskItem;","map":{"version":3,"sources":["E:/D/admin/src/pages/Taskboard/TaskItem.js"],"names":["infoColor","warningColor","React","Typography","classNames","makeStyles","useStyles","theme","taskboard","overflowX","overflowY","whiteSpace","breakpoints","down","height","up","wrapper","width","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","boxSizing","display","verticalAlign","list","flexDirection","maxHeight","backgroundColor","borderRadius","shape","header","position","alignItems","letterSpacing","padding","margin","fontWeight","textTransform","fontSize","task","boxShadow","shadows","color","palette","text","primary","background","paper","marginBottom","cursor","content","border","top","borderTopWidth","borderBottomColor","right","success","borderTopColor","secondary","main","borderRightColor","borderLeftColor","info","warning","danger","cards","TaskItem","isDragging","provided","classes","innerRef","draggableProps","dragHandleProps","title","description"],"mappings":"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","sourcesContent":["import { infoColor, warningColor } from '../../styleVariables';\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  taskboard: {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap',\n    [theme.breakpoints.down('sm')]: {\n      height: 'calc(100vh - 56px)'\n    },\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100vh - 64px)'\n    }\n  },\n  wrapper: {\n    width: '280px',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingRight: theme.spacing(1) / 2,\n    paddingLeft: theme.spacing(1) / 2,\n    boxSizing: 'border-box',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    height: '100%'\n  },\n  list: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '100%',\n    whiteSpace: 'normal',\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    borderRadius: theme.shape.borderRadius\n  },\n  header: {\n    position: 'relative',\n    flexDirection: 'row',\n    alignItems: 'center',\n    letterSpacing: '0.02rem',\n    padding: theme.spacing(1),\n    margin: 0,\n    fontWeight: 500,\n    textTransform: 'uppercase',\n    fontSize: '12px'\n  },\n  task: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.primary,\n    background: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    '&:last-child': {\n      marginBottom: 0\n    },\n    '&:hover': {\n      cursor: 'grab'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      border: '4px solid transparent',\n      top: 0,\n      borderTopWidth: '12px',\n      borderBottomColor: 'transparent',\n      right: '6px'\n    }\n  },\n  success: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  info: {\n    '&::after': {\n      borderTopColor: infoColor,\n      borderRightColor: infoColor,\n      borderLeftColor: infoColor\n    }\n  },\n  warning: {\n    '&::after': {\n      borderTopColor: warningColor,\n      borderRightColor: warningColor,\n      borderLeftColor: warningColor\n    }\n  },\n  danger: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  cards: {\n    position: 'relative',\n    padding: `0 ${theme.spacing(1)}px ${theme.spacing(1)}px`,\n    boxSizing: 'border-box',\n    height: '100%',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }\n}));\n\nconst TaskItem = ({ task, isDragging, provided }) => {\n  const classes = useStyles();\n  return (\n    <div\n      className={classNames(\n        classes.task,\n        task.color ? classes[task.color] : ''\n      )}\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n    >\n      <Typography variant=\"body1\" gutterBottom>\n        {task.title}\n      </Typography>\n      <Typography variant=\"caption\">{task.description}</Typography>\n    </div>\n  );\n};\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}