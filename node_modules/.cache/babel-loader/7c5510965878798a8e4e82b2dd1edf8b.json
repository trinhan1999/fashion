{"ast":null,"code":"// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nexport default reorder;\nexport const reorderQuoteMap = ({\n  quoteMap,\n  source,\n  destination\n}) => {\n  const current = [...quoteMap[source.droppableId]];\n  const next = [...quoteMap[destination.droppableId]];\n  const target = current[source.index]; // moving to same list\n\n  if (source.droppableId === destination.droppableId) {\n    const reordered = reorder(current, source.index, destination.index);\n    const result = { ...quoteMap,\n      [source.droppableId]: reordered\n    };\n    return {\n      quoteMap: result\n    };\n  } // moving to different list\n  // remove from original\n\n\n  current.splice(source.index, 1); // insert into next\n\n  next.splice(destination.index, 0, target);\n  const result = { ...quoteMap,\n    [source.droppableId]: current,\n    [destination.droppableId]: next\n  };\n  return {\n    quoteMap: result\n  };\n};","map":{"version":3,"sources":["D:/admin/src/pages/Taskboard/reorder.js"],"names":["reorder","list","startIndex","endIndex","result","Array","from","removed","splice","reorderQuoteMap","quoteMap","source","destination","current","droppableId","next","target","index","reordered"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,QAAnB,KAAgC;AAC9C,QAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAf;AACA,QAAM,CAACM,OAAD,IAAYH,MAAM,CAACI,MAAP,CAAcN,UAAd,EAA0B,CAA1B,CAAlB;AACAE,EAAAA,MAAM,CAACI,MAAP,CAAcL,QAAd,EAAwB,CAAxB,EAA2BI,OAA3B;AAEA,SAAOH,MAAP;AACD,CAND;;AAQA,eAAeJ,OAAf;AAEA,OAAO,MAAMS,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAuC;AACpE,QAAMC,OAAO,GAAG,CAAC,GAAGH,QAAQ,CAACC,MAAM,CAACG,WAAR,CAAZ,CAAhB;AACA,QAAMC,IAAI,GAAG,CAAC,GAAGL,QAAQ,CAACE,WAAW,CAACE,WAAb,CAAZ,CAAb;AACA,QAAME,MAAM,GAAGH,OAAO,CAACF,MAAM,CAACM,KAAR,CAAtB,CAHoE,CAKpE;;AACA,MAAIN,MAAM,CAACG,WAAP,KAAuBF,WAAW,CAACE,WAAvC,EAAoD;AAClD,UAAMI,SAAS,GAAGlB,OAAO,CAACa,OAAD,EAAUF,MAAM,CAACM,KAAjB,EAAwBL,WAAW,CAACK,KAApC,CAAzB;AACA,UAAMb,MAAM,GAAG,EACb,GAAGM,QADU;AAEb,OAACC,MAAM,CAACG,WAAR,GAAsBI;AAFT,KAAf;AAIA,WAAO;AACLR,MAAAA,QAAQ,EAAEN;AADL,KAAP;AAGD,GAfmE,CAiBpE;AAEA;;;AACAS,EAAAA,OAAO,CAACL,MAAR,CAAeG,MAAM,CAACM,KAAtB,EAA6B,CAA7B,EApBoE,CAqBpE;;AACAF,EAAAA,IAAI,CAACP,MAAL,CAAYI,WAAW,CAACK,KAAxB,EAA+B,CAA/B,EAAkCD,MAAlC;AAEA,QAAMZ,MAAM,GAAG,EACb,GAAGM,QADU;AAEb,KAACC,MAAM,CAACG,WAAR,GAAsBD,OAFT;AAGb,KAACD,WAAW,CAACE,WAAb,GAA2BC;AAHd,GAAf;AAMA,SAAO;AACLL,IAAAA,QAAQ,EAAEN;AADL,GAAP;AAGD,CAjCM","sourcesContent":["// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nexport default reorder;\n\nexport const reorderQuoteMap = ({ quoteMap, source, destination }) => {\n  const current = [...quoteMap[source.droppableId]];\n  const next = [...quoteMap[destination.droppableId]];\n  const target = current[source.index];\n\n  // moving to same list\n  if (source.droppableId === destination.droppableId) {\n    const reordered = reorder(current, source.index, destination.index);\n    const result = {\n      ...quoteMap,\n      [source.droppableId]: reordered\n    };\n    return {\n      quoteMap: result\n    };\n  }\n\n  // moving to different list\n\n  // remove from original\n  current.splice(source.index, 1);\n  // insert into next\n  next.splice(destination.index, 0, target);\n\n  const result = {\n    ...quoteMap,\n    [source.droppableId]: current,\n    [destination.droppableId]: next\n  };\n\n  return {\n    quoteMap: result\n  };\n};\n"]},"metadata":{},"sourceType":"module"}