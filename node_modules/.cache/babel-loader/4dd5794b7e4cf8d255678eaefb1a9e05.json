{"ast":null,"code":"var _jsxFileName = \"E:\\\\D\\\\admin\\\\src\\\\components\\\\AppProvider\\\\AppProvider.js\";\nimport React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { StylesProvider, jssPreset } from '@material-ui/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { create } from 'jss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport indigo from '@material-ui/core/colors/indigo';\nimport red from '@material-ui/core/colors/red';\nimport rtl from 'jss-rtl';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nconst jss = create({\n  plugins: [...jssPreset().plugins, rtl()]\n});\nconst Context = createContext();\nconst {\n  Provider\n} = Context;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'direction':\n      const newState = { ...state,\n        direction: state.direction === 'ltr' ? 'rtl' : 'ltr'\n      };\n      return newState;\n\n    case 'type':\n      return { ...state,\n        type: state.type === 'light' ? 'dark' : 'light'\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst AppProvider = ({\n  children\n}) => {\n  const prefersDarkMode = useMediaQuery('@media (prefers-color-scheme: dark)');\n  const [state, dispatch] = useReducer(reducer, {\n    type: prefersDarkMode ? 'dark' : 'light',\n    direction: 'ltr'\n  });\n  const theme = createMuiTheme({\n    direction: state.direction,\n    palette: {\n      type: state.type,\n      primary: indigo,\n      secondary: red,\n      error: red\n    },\n    typography: {\n      headline: {\n        fontSize: '1rem'\n      },\n      subtitle1: {\n        fontSize: '0.8125rem'\n      },\n      button: {\n        fontWeight: 400,\n        textTransform: 'initial'\n      },\n      body1: {\n        fontSize: '0.875rem'\n      }\n    },\n    shape: {\n      borderRadius: 4\n    }\n  });\n  useEffect(() => {\n    document.body.dir = state.direction;\n  }, [state.direction]);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    jss: jss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Provider, {\n    value: [state, dispatch],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nexport default AppProvider;\nexport const useAppState = () => useContext(Context);","map":{"version":3,"sources":["E:/D/admin/src/components/AppProvider/AppProvider.js"],"names":["React","createContext","useContext","useEffect","useReducer","StylesProvider","jssPreset","ThemeProvider","create","createMuiTheme","indigo","red","rtl","useMediaQuery","jss","plugins","Context","Provider","reducer","state","action","type","newState","direction","AppProvider","children","prefersDarkMode","dispatch","theme","palette","primary","secondary","error","typography","headline","fontSize","subtitle1","button","fontWeight","textTransform","body1","shape","borderRadius","document","body","dir","useAppState"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { StylesProvider, jssPreset } from '@material-ui/styles';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport { create } from 'jss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport indigo from '@material-ui/core/colors/indigo';\nimport red from '@material-ui/core/colors/red';\nimport rtl from 'jss-rtl';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nconst Context = createContext();\nconst { Provider } = Context;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'direction':\n      const newState = {\n        ...state,\n        direction: state.direction === 'ltr' ? 'rtl' : 'ltr'\n      };\n      return newState;\n    case 'type':\n      return { ...state, type: state.type === 'light' ? 'dark' : 'light' };\n    default:\n      return state;\n  }\n};\n\nconst AppProvider = ({ children }) => {\n  const prefersDarkMode = useMediaQuery('@media (prefers-color-scheme: dark)');\n  const [state, dispatch] = useReducer(reducer, {\n    type: prefersDarkMode ? 'dark' : 'light',\n    direction: 'ltr'\n  });\n\n  const theme = createMuiTheme({\n    direction: state.direction,\n    palette: {\n      type: state.type,\n      primary: indigo,\n      secondary: red,\n      error: red\n    },\n    typography: {\n      headline: {\n        fontSize: '1rem'\n      },\n      subtitle1: {\n        fontSize: '0.8125rem'\n      },\n      button: {\n        fontWeight: 400,\n        textTransform: 'initial'\n      },\n      body1: {\n        fontSize: '0.875rem'\n      }\n    },\n    shape: {\n      borderRadius: 4\n    }\n  });\n\n  useEffect(() => {\n    document.body.dir = state.direction;\n  }, [state.direction]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <StylesProvider jss={jss}>\n        <Provider value={[state, dispatch]}>{children}</Provider>\n      </StylesProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default AppProvider;\nexport const useAppState = () => useContext(Context);\n"]},"metadata":{},"sourceType":"module"}