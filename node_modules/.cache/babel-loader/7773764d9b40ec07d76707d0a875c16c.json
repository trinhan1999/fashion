{"ast":null,"code":"// Capitalize\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n} // Format price\n\nexport function formatPrice(number) {\n  const fnumber = parseFloat(number);\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  }).format(fnumber);\n} // Get wind direction\n\nexport function windDirection(degree) {\n  const sectors = [\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"];\n  degree += 22.5;\n\n  if (degree < 0) {\n    degree = 360 - Math.abs(degree) % 360;\n  } else {\n    degree = degree % 360;\n  }\n\n  const which = parseInt(degree / 45, 10);\n  return sectors[which];\n} // Get weather icon class\n\nexport function getWeatherIcon(code) {\n  const weatherIcons = {\n    \"01d\": \"pe-is-w-sun-1\",\n    \"02d\": \"pe-is-w-partly-cloudy-1\",\n    \"03d\": \"pe-is-w-partly-cloudy-2\",\n    \"04d\": \"pe-is-w-mostly-cloudy-2\",\n    \"09d\": \"pe-is-w-rain-1\",\n    \"10d\": \"pe-is-w-rain-day\",\n    \"11d\": \"pe-is-w-severe-thunderstorm\",\n    \"13d\": \"pe-is-w-snow-day-2\",\n    \"50d\": \"pe-is-w-mist\",\n    \"01n\": \"pe-is-w-moon-1\",\n    \"02n\": \"pe-is-w-partly-cloudy-2\",\n    \"03n\": \"pe-is-w-partly-cloudy-2\",\n    \"04n\": \"pe-is-w-mostly-cloudy-2\",\n    \"09n\": \"pe-is-w-rain-1\",\n    \"10n\": \"pe-is-w-rain-full-moon\",\n    \"11n\": \"pe-is-w-severe-thunderstorm\",\n    \"13n\": \"pe-is-w-snow-full-moon-1\",\n    \"50n\": \"pe-is-w-mist\"\n  };\n  return weatherIcons[code];\n} // Get stocks data\n\nexport async function getStocks(symbols) {\n  let stocks = undefined;\n\n  try {\n    const stocks_call = await fetch(`//www.alphavantage.co/query?function=BATCH_STOCK_QUOTES&symbols=${symbols},&apikey=${process.env.REACT_APP_STOCKS_API_KEY}`).then(res => {\n      if (res.ok) {\n        return res;\n      } else {\n        throw Error(`Request rejected with status ${res.status}`);\n      }\n    }).catch(console.error);\n\n    if (stocks_call !== undefined) {\n      stocks = await stocks_call.json();\n    }\n\n    return stocks;\n  } catch (e) {\n    return \"\";\n  }\n} // Get weather data\n\nexport async function getWeather(city, country, days) {\n  let forecast = undefined;\n\n  try {\n    const forecast_call = await fetch(`//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&cnt=${days}&units=metric`).then(res => {\n      if (res.ok) {\n        return res;\n      } else {\n        throw Error(`Request rejected with status ${res.status}`);\n      }\n    }).catch(console.error);\n\n    if (forecast_call !== undefined) {\n      forecast = await forecast_call.json();\n    }\n\n    return forecast;\n  } catch (e) {\n    return \"\";\n  }\n}","map":{"version":3,"sources":["E:/D/admin/src/helpers.js"],"names":["capitalize","string","charAt","toUpperCase","slice","formatPrice","number","fnumber","parseFloat","Intl","NumberFormat","style","currency","format","windDirection","degree","sectors","Math","abs","which","parseInt","getWeatherIcon","code","weatherIcons","getStocks","symbols","stocks","undefined","stocks_call","fetch","process","env","REACT_APP_STOCKS_API_KEY","then","res","ok","Error","status","catch","console","error","json","e","getWeather","city","country","days","forecast","forecast_call","REACT_APP_WEATHER_API_KEY"],"mappings":"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","sourcesContent":["// Capitalize\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// Format price\nexport function formatPrice(number) {\n  const fnumber = parseFloat(number);\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  }).format(fnumber);\n}\n\n// Get wind direction\nexport function windDirection(degree) {\n  const sectors = [\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"];\n\n  degree += 22.5;\n\n  if (degree < 0) {\n    degree = 360 - (Math.abs(degree) % 360);\n  } else {\n    degree = degree % 360;\n  }\n\n  const which = parseInt(degree / 45, 10);\n  return sectors[which];\n}\n\n// Get weather icon class\nexport function getWeatherIcon(code) {\n  const weatherIcons = {\n    \"01d\": \"pe-is-w-sun-1\",\n    \"02d\": \"pe-is-w-partly-cloudy-1\",\n    \"03d\": \"pe-is-w-partly-cloudy-2\",\n    \"04d\": \"pe-is-w-mostly-cloudy-2\",\n    \"09d\": \"pe-is-w-rain-1\",\n    \"10d\": \"pe-is-w-rain-day\",\n    \"11d\": \"pe-is-w-severe-thunderstorm\",\n    \"13d\": \"pe-is-w-snow-day-2\",\n    \"50d\": \"pe-is-w-mist\",\n    \"01n\": \"pe-is-w-moon-1\",\n    \"02n\": \"pe-is-w-partly-cloudy-2\",\n    \"03n\": \"pe-is-w-partly-cloudy-2\",\n    \"04n\": \"pe-is-w-mostly-cloudy-2\",\n    \"09n\": \"pe-is-w-rain-1\",\n    \"10n\": \"pe-is-w-rain-full-moon\",\n    \"11n\": \"pe-is-w-severe-thunderstorm\",\n    \"13n\": \"pe-is-w-snow-full-moon-1\",\n    \"50n\": \"pe-is-w-mist\"\n  };\n\n  return weatherIcons[code];\n}\n\n// Get stocks data\nexport async function getStocks(symbols) {\n  let stocks = undefined;\n  try {\n    const stocks_call = await fetch(\n      `//www.alphavantage.co/query?function=BATCH_STOCK_QUOTES&symbols=${symbols},&apikey=${process.env.REACT_APP_STOCKS_API_KEY}`\n    )\n      .then(res => {\n        if (res.ok) {\n          return res;\n        } else {\n          throw Error(`Request rejected with status ${res.status}`);\n        }\n      })\n      .catch(console.error);\n\n    if (stocks_call !== undefined) {\n      stocks = await stocks_call.json();\n    }\n\n    return stocks;\n  } catch (e) {\n    return \"\";\n  }\n}\n\n// Get weather data\nexport async function getWeather(city, country, days) {\n  let forecast = undefined;\n  try {\n    const forecast_call = await fetch(\n      `//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&cnt=${days}&units=metric`\n    )\n      .then(res => {\n        if (res.ok) {\n          return res;\n        } else {\n          throw Error(`Request rejected with status ${res.status}`);\n        }\n      })\n      .catch(console.error);\n\n    if (forecast_call !== undefined) {\n      forecast = await forecast_call.json();\n    }\n\n    return forecast;\n  } catch (e) {\n    return \"\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}