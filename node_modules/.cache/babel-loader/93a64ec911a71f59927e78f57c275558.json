{"ast":null,"code":"var _jsxFileName = \"D:\\\\admin\\\\src\\\\utils\\\\demos\\\\menus\\\\SimpleListMenu.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nconst options = ['Show some love to Material-UI', 'Show all notification content', 'Hide sensitive notification content', 'Hide all notification content'];\n\nclass SimpleListMenu extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.button = null;\n    this.state = {\n      anchorEl: null,\n      selectedIndex: 1\n    };\n\n    this.handleClickListItem = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleMenuItemClick = (event, index) => {\n      this.setState({\n        selectedIndex: index,\n        anchorEl: null\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      anchorEl\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      component: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      \"aria-haspopup\": \"true\",\n      \"aria-controls\": \"lock-menu\",\n      \"aria-label\": \"When device is locked\",\n      onClick: this.handleClickListItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"When device is locked\",\n      secondary: options[this.state.selectedIndex],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Menu, {\n      id: \"lock-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, options.map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option,\n      disabled: index === 0,\n      selected: index === this.state.selectedIndex,\n      onClick: event => this.handleMenuItemClick(event, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, option))));\n  }\n\n}\n\nSimpleListMenu.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimpleListMenu);","map":{"version":3,"sources":["D:/admin/src/utils/demos/menus/SimpleListMenu.js"],"names":["React","PropTypes","withStyles","List","ListItem","ListItemText","MenuItem","Menu","styles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","options","SimpleListMenu","Component","button","state","anchorEl","selectedIndex","handleClickListItem","event","setState","currentTarget","handleMenuItemClick","index","handleClose","render","classes","props","Boolean","map","option","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nconst options = [\n  'Show some love to Material-UI',\n  'Show all notification content',\n  'Hide sensitive notification content',\n  'Hide all notification content',\n];\n\nclass SimpleListMenu extends React.Component {\n  button = null;\n\n  state = {\n    anchorEl: null,\n    selectedIndex: 1,\n  };\n\n  handleClickListItem = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleMenuItemClick = (event, index) => {\n    this.setState({ selectedIndex: index, anchorEl: null });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <List component=\"nav\">\n          <ListItem\n            button\n            aria-haspopup=\"true\"\n            aria-controls=\"lock-menu\"\n            aria-label=\"When device is locked\"\n            onClick={this.handleClickListItem}\n          >\n            <ListItemText\n              primary=\"When device is locked\"\n              secondary={options[this.state.selectedIndex]}\n            />\n          </ListItem>\n        </List>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          {options.map((option, index) => (\n            <MenuItem\n              key={option}\n              disabled={index === 0}\n              selected={index === this.state.selectedIndex}\n              onClick={event => this.handleMenuItemClick(event, index)}\n            >\n              {option}\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n    );\n  }\n}\n\nSimpleListMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleListMenu);\n"]},"metadata":{},"sourceType":"module"}