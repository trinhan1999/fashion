{"ast":null,"code":"var _jsxFileName = \"D:\\\\admin\\\\src\\\\utils\\\\demos\\\\drawers\\\\PermanentDrawer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { mailFolderListItems, otherMailFolderListItems } from './tileData';\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appFrame: {\n    height: 440,\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%'\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`\n  },\n  'appBar-left': {\n    marginLeft: drawerWidth\n  },\n  'appBar-right': {\n    marginRight: drawerWidth\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1) * 3\n  }\n});\n\nclass PermanentDrawer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchor: 'left'\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        anchor: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      anchor\n    } = this.state;\n    const drawer = /*#__PURE__*/React.createElement(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      anchor: anchor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, mailFolderListItems), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, otherMailFolderListItems));\n    let before = null;\n    let after = null;\n\n    if (anchor === 'left') {\n      before = drawer;\n    } else {\n      after = drawer;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"permanent-anchor\",\n      select: true,\n      label: \"Anchor\",\n      value: anchor,\n      onChange: this.handleChange,\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"left\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"right\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.appFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"absolute\",\n      className: classNames(classes.appBar, classes[`appBar-${anchor}`]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h1\",\n      color: \"inherit\",\n      noWrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, \"Permanent drawer\"))), before, /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, 'You think water moves fast? You should see ice.')), after));\n  }\n\n}\n\nPermanentDrawer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(PermanentDrawer);","map":{"version":3,"sources":["D:/admin/src/utils/demos/drawers/PermanentDrawer.js"],"names":["React","PropTypes","classNames","withStyles","Drawer","AppBar","Toolbar","List","MenuItem","TextField","Typography","Divider","mailFolderListItems","otherMailFolderListItems","drawerWidth","styles","theme","root","flexGrow","appFrame","height","zIndex","overflow","position","display","width","appBar","marginLeft","marginRight","drawerPaper","toolbar","mixins","content","backgroundColor","palette","background","default","padding","spacing","PermanentDrawer","Component","state","anchor","handleChange","event","setState","target","value","render","classes","props","drawer","paper","before","after","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,mBAAT,EAA8BC,wBAA9B,QAA8D,YAA9D;AAEA,MAAMC,WAAW,GAAG,GAApB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiB;AAIvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,GADA;AAERC,IAAAA,MAAM,EAAE,CAFA;AAGRC,IAAAA,QAAQ,EAAE,QAHF;AAIRC,IAAAA,QAAQ,EAAE,UAJF;AAKRC,IAAAA,OAAO,EAAE,MALD;AAMRC,IAAAA,KAAK,EAAE;AANC,GAJa;AAYvBC,EAAAA,MAAM,EAAE;AACND,IAAAA,KAAK,EAAG,eAAcX,WAAY;AAD5B,GAZe;AAevB,iBAAe;AACba,IAAAA,UAAU,EAAEb;AADC,GAfQ;AAkBvB,kBAAgB;AACdc,IAAAA,WAAW,EAAEd;AADC,GAlBO;AAqBvBe,EAAAA,WAAW,EAAE;AACXN,IAAAA,QAAQ,EAAE,UADC;AAEXE,IAAAA,KAAK,EAAEX;AAFI,GArBU;AAyBvBgB,EAAAA,OAAO,EAAEd,KAAK,CAACe,MAAN,CAAaD,OAzBC;AA0BvBE,EAAAA,OAAO,EAAE;AACPd,IAAAA,QAAQ,EAAE,CADH;AAEPe,IAAAA,eAAe,EAAEjB,KAAK,CAACkB,OAAN,CAAcC,UAAd,CAAyBC,OAFnC;AAGPC,IAAAA,OAAO,EAAErB,KAAK,CAACsB,OAAN,CAAc,CAAd,IAAmB;AAHrB;AA1Bc,CAAL,CAApB;;AAiCA,MAAMC,eAAN,SAA8BvC,KAAK,CAACwC,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC5CC,KAD4C,GACpC;AACNC,MAAAA,MAAM,EAAE;AADF,KADoC;;AAAA,SAK5CC,YAL4C,GAK7BC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZH,QAAAA,MAAM,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADT,OAAd;AAGD,KAT2C;AAAA;;AAW5CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,UAAM;AAAER,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AAEA,UAAMU,MAAM,gBACV,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAEH,OAAO,CAACpB;AADR,OAFX;AAKE,MAAA,MAAM,EAAEa,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAK,MAAA,SAAS,EAAEO,OAAO,CAACnB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOlB,mBAAP,CATF,eAUE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,eAWE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,wBAAP,CAXF,CADF;AAgBA,QAAIwC,MAAM,GAAG,IAAb;AACA,QAAIC,KAAK,GAAG,IAAZ;;AAEA,QAAIZ,MAAM,KAAK,MAAf,EAAuB;AACrBW,MAAAA,MAAM,GAAGF,MAAT;AACD,KAFD,MAEO;AACLG,MAAAA,KAAK,GAAGH,MAAR;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAAChC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,KAAK,EAAEyB,MAJT;AAKE,MAAA,QAAQ,EAAE,KAAKC,YALjB;AAME,MAAA,MAAM,EAAC,QANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CADF,eAYE;AAAK,MAAA,SAAS,EAAEM,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAC,UADX;AAEE,MAAA,SAAS,EAAEjB,UAAU,CAAC+C,OAAO,CAACvB,MAAT,EAAiBuB,OAAO,CAAE,UAASP,MAAO,EAAlB,CAAxB,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAC,SAA/B;AAAyC,MAAA,MAAM,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAJF,CADF,EAWGW,MAXH,eAYE;AAAM,MAAA,SAAS,EAAEJ,OAAO,CAACjB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEiB,OAAO,CAACnB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,iDAAb,CAFF,CAZF,EAgBGwB,KAhBH,CAZF,CADF;AAiCD;;AAzE2C;;AA4E9Cf,eAAe,CAACgB,SAAhB,GAA4B;AAC1BN,EAAAA,OAAO,EAAEhD,SAAS,CAACuD,MAAV,CAAiBC;AADA,CAA5B;AAIA,eAAetD,UAAU,CAACY,MAAD,CAAV,CAAmBwB,eAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { mailFolderListItems, otherMailFolderListItems } from './tileData';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appFrame: {\n    height: 440,\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n  },\n  'appBar-left': {\n    marginLeft: drawerWidth,\n  },\n  'appBar-right': {\n    marginRight: drawerWidth,\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1) * 3,\n  },\n});\n\nclass PermanentDrawer extends React.Component {\n  state = {\n    anchor: 'left',\n  };\n\n  handleChange = event => {\n    this.setState({\n      anchor: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { anchor } = this.state;\n\n    const drawer = (\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor={anchor}\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>{mailFolderListItems}</List>\n        <Divider />\n        <List>{otherMailFolderListItems}</List>\n      </Drawer>\n    );\n\n    let before = null;\n    let after = null;\n\n    if (anchor === 'left') {\n      before = drawer;\n    } else {\n      after = drawer;\n    }\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          id=\"permanent-anchor\"\n          select\n          label=\"Anchor\"\n          value={anchor}\n          onChange={this.handleChange}\n          margin=\"normal\"\n        >\n          <MenuItem value=\"left\">left</MenuItem>\n          <MenuItem value=\"right\">right</MenuItem>\n        </TextField>\n        <div className={classes.appFrame}>\n          <AppBar\n            position=\"absolute\"\n            className={classNames(classes.appBar, classes[`appBar-${anchor}`])}\n          >\n            <Toolbar>\n              <Typography variant=\"h1\" color=\"inherit\" noWrap>\n                Permanent drawer\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {before}\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Typography>{'You think water moves fast? You should see ice.'}</Typography>\n          </main>\n          {after}\n        </div>\n      </div>\n    );\n  }\n}\n\nPermanentDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PermanentDrawer);\n"]},"metadata":{},"sourceType":"module"}