{"ast":null,"code":"var _jsxFileName = \"E:\\\\D\\\\admin\\\\src\\\\pages\\\\Maps\\\\Google.js\";\nimport { GoogleMap, InfoWindow, Marker, Polyline, withGoogleMap, withScriptjs } from 'react-google-maps';\nimport React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Wrapper } from '../../components';\nimport { makeStyles } from '@material-ui/core/styles';\nconst polyCoordinates = [{\n  lat: -34.397,\n  lng: 150.644\n}, {\n  lat: -34.754764,\n  lng: 149.736246\n}];\nconst styles = [{\n  featureType: 'all',\n  stylers: [{\n    saturation: -80\n  }]\n}, {\n  featureType: 'road.arterial',\n  elementType: 'geometry',\n  stylers: [{\n    hue: '#00ffee'\n  }, {\n    saturation: 50\n  }]\n}, {\n  featureType: 'poi.business',\n  elementType: 'labels',\n  stylers: [{\n    visibility: 'off'\n  }]\n}];\nconst useStyles = makeStyles(theme => ({\n  map: {\n    [theme.breakpoints.down('sm')]: {\n      height: `calc(100vh - 182px)`\n    },\n    [theme.breakpoints.up('sm')]: {\n      height: `calc(100vh - 204px)`\n    }\n  }\n}));\nconst DemoMap = withScriptjs(withGoogleMap(props => /*#__PURE__*/React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  defaultCenter: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  defaultOptions: {\n    scrollwheel: false,\n    zoomControl: false,\n    styles: props.showStyles ? styles : null\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }\n}, props.showInfoWindow && /*#__PURE__*/React.createElement(Marker, {\n  position: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  onClick: props.onToggleOpen,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }\n}, props.isInfoWindowOpen && /*#__PURE__*/React.createElement(InfoWindow, {\n  onCloseClick: props.onToggleOpen,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(Typography, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 15\n  }\n}, \"InfoWindow content\"))), props.showPolyline && /*#__PURE__*/React.createElement(Polyline, {\n  path: polyCoordinates,\n  geodesic: true,\n  options: {\n    strokeColor: '#000000',\n    strokeOpacity: 1,\n    strokeWeight: 2\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }\n}))));\n\nconst Google = () => {\n  const classes = useStyles();\n  const [tab, setTab] = useState(0);\n  const [isInfoWindowOpen, setIsInfoWindowOpen] = useState(false);\n\n  const handleInfoWindowToggle = () => setIsInfoWindowOpen(!isInfoWindowOpen);\n\n  const handleTabToggle = (event, tab) => setTab(tab);\n\n  const googleMapURL = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCGACbHFNK9TQftRdpSTVuz55WOD${process.env.REACT_APP_GOOGLE_API_KEY}`;\n  const loadingElement = /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 26\n    }\n  });\n  const containerElement = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.map,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 28\n    }\n  });\n  const mapElement = /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 22\n    }\n  });\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    padding: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    justify: 'center',\n    style: {\n      marginTop: '-52px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 11,\n    md: 10,\n    lg: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tab,\n    onChange: handleTabToggle,\n    scrollButtons: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Styles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Polyline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Info Window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  })), tab === 0 && /*#__PURE__*/React.createElement(DemoMap, {\n    googleMapURL: googleMapURL,\n    loadingElement: loadingElement,\n    containerElement: containerElement,\n    mapElement: mapElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }), tab === 1 && /*#__PURE__*/React.createElement(DemoMap, {\n    googleMapURL: googleMapURL,\n    loadingElement: loadingElement,\n    containerElement: containerElement,\n    mapElement: mapElement,\n    showStyles: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }), tab === 2 && /*#__PURE__*/React.createElement(DemoMap, {\n    googleMapURL: googleMapURL,\n    loadingElement: loadingElement,\n    containerElement: containerElement,\n    mapElement: mapElement,\n    showPolyline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }), tab === 3 && /*#__PURE__*/React.createElement(DemoMap, {\n    googleMapURL: googleMapURL,\n    loadingElement: loadingElement,\n    containerElement: containerElement,\n    mapElement: mapElement,\n    showInfoWindow: true,\n    onToggleOpen: handleInfoWindowToggle,\n    isInfoWindowOpen: isInfoWindowOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Google;","map":{"version":3,"sources":["E:/D/admin/src/pages/Maps/Google.js"],"names":["GoogleMap","InfoWindow","Marker","Polyline","withGoogleMap","withScriptjs","React","useState","AppBar","Card","Grid","Tab","Tabs","Toolbar","Typography","Wrapper","makeStyles","polyCoordinates","lat","lng","styles","featureType","stylers","saturation","elementType","hue","visibility","useStyles","theme","map","breakpoints","down","height","up","DemoMap","props","scrollwheel","zoomControl","showStyles","showInfoWindow","onToggleOpen","isInfoWindowOpen","showPolyline","strokeColor","strokeOpacity","strokeWeight","Google","classes","tab","setTab","setIsInfoWindowOpen","handleInfoWindowToggle","handleTabToggle","event","googleMapURL","process","env","REACT_APP_GOOGLE_API_KEY","loadingElement","containerElement","mapElement","marginTop"],"mappings":"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","sourcesContent":["import {\n  GoogleMap,\n  InfoWindow,\n  Marker,\n  Polyline,\n  withGoogleMap,\n  withScriptjs\n} from 'react-google-maps';\nimport React, { useState } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Wrapper } from '../../components';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst polyCoordinates = [\n  {\n    lat: -34.397,\n    lng: 150.644\n  },\n  {\n    lat: -34.754764,\n    lng: 149.736246\n  }\n];\n\nconst styles = [\n  {\n    featureType: 'all',\n    stylers: [\n      {\n        saturation: -80\n      }\n    ]\n  },\n  {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [\n      {\n        hue: '#00ffee'\n      },\n      {\n        saturation: 50\n      }\n    ]\n  },\n  {\n    featureType: 'poi.business',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off'\n      }\n    ]\n  }\n];\n\nconst useStyles = makeStyles(theme => ({\n  map: {\n    [theme.breakpoints.down('sm')]: {\n      height: `calc(100vh - 182px)`\n    },\n    [theme.breakpoints.up('sm')]: {\n      height: `calc(100vh - 204px)`\n    }\n  }\n}));\n\nconst DemoMap = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={8}\n      defaultCenter={{ lat: -34.397, lng: 150.644 }}\n      defaultOptions={{\n        scrollwheel: false,\n        zoomControl: false,\n        styles: props.showStyles ? styles : null\n      }}\n    >\n      {props.showInfoWindow && (\n        <Marker\n          position={{ lat: -34.397, lng: 150.644 }}\n          onClick={props.onToggleOpen}\n        >\n          {props.isInfoWindowOpen && (\n            <InfoWindow onCloseClick={props.onToggleOpen}>\n              <Typography>InfoWindow content</Typography>\n            </InfoWindow>\n          )}\n        </Marker>\n      )}\n      {props.showPolyline && (\n        <Polyline\n          path={polyCoordinates}\n          geodesic={true}\n          options={{\n            strokeColor: '#000000',\n            strokeOpacity: 1,\n            strokeWeight: 2\n          }}\n        />\n      )}\n    </GoogleMap>\n  ))\n);\n\nconst Google = () => {\n  const classes = useStyles();\n  const [tab, setTab] = useState(0);\n  const [isInfoWindowOpen, setIsInfoWindowOpen] = useState(false);\n\n  const handleInfoWindowToggle = () => setIsInfoWindowOpen(!isInfoWindowOpen);\n\n  const handleTabToggle = (event, tab) => setTab(tab);\n\n  const googleMapURL = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCGACbHFNK9TQftRdpSTVuz55WOD${process.env.REACT_APP_GOOGLE_API_KEY}`;\n  const loadingElement = <div style={{ height: `100%` }} />;\n  const containerElement = <div className={classes.map} />;\n  const mapElement = <div style={{ height: `100%` }} />;\n\n  return (\n    <Wrapper padding={false}>\n      <AppBar position=\"static\">\n        <Toolbar />\n        <Toolbar />\n      </AppBar>\n\n      <Grid\n        container\n        spacing={1}\n        justify={'center'}\n        style={{ marginTop: '-52px' }}\n      >\n        <Grid item xs={11} sm={11} md={10} lg={9}>\n          <Card>\n            <Tabs value={tab} onChange={handleTabToggle} scrollButtons=\"auto\">\n              <Tab label=\"Basic\" />\n              <Tab label=\"Styles\" />\n              <Tab label=\"Polyline\" />\n              <Tab label=\"Info Window\" />\n            </Tabs>\n            {tab === 0 && (\n              <DemoMap\n                googleMapURL={googleMapURL}\n                loadingElement={loadingElement}\n                containerElement={containerElement}\n                mapElement={mapElement}\n              />\n            )}\n            {tab === 1 && (\n              <DemoMap\n                googleMapURL={googleMapURL}\n                loadingElement={loadingElement}\n                containerElement={containerElement}\n                mapElement={mapElement}\n                showStyles={true}\n              />\n            )}\n            {tab === 2 && (\n              <DemoMap\n                googleMapURL={googleMapURL}\n                loadingElement={loadingElement}\n                containerElement={containerElement}\n                mapElement={mapElement}\n                showPolyline={true}\n              />\n            )}\n            {tab === 3 && (\n              <DemoMap\n                googleMapURL={googleMapURL}\n                loadingElement={loadingElement}\n                containerElement={containerElement}\n                mapElement={mapElement}\n                showInfoWindow={true}\n                onToggleOpen={handleInfoWindowToggle}\n                isInfoWindowOpen={isInfoWindowOpen}\n              />\n            )}\n          </Card>\n        </Grid>\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default Google;\n"]},"metadata":{},"sourceType":"module"}