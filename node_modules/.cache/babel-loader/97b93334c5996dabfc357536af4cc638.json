{"ast":null,"code":"var _jsxFileName = \"E:\\\\D\\\\admin\\\\src\\\\utils\\\\demos\\\\steppers\\\\HorizontalNonLinearAlternativeLabelStepper.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    width: '90%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: 'inline-block'\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n});\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass HorizontalNonLinearAlternativeLabelStepper extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      completed: new Set(),\n      skipped: new Set()\n    };\n\n    this.totalSteps = () => {\n      return getSteps().length;\n    };\n\n    this.isStepOptional = step => {\n      return step === 1;\n    };\n\n    this.handleSkip = () => {\n      const {\n        activeStep\n      } = this.state;\n\n      if (!this.isStepOptional(activeStep)) {\n        // You probably want to guard against something like this\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n\n      this.setState(state => {\n        const skipped = new Set(state.skipped.values());\n        skipped.add(activeStep);\n        return {\n          activeStep: state.activeStep + 1,\n          skipped\n        };\n      });\n    };\n\n    this.handleNext = () => {\n      let activeStep;\n\n      if (this.isLastStep() && !this.allStepsCompleted()) {\n        // It's the last step, but not all steps have been completed\n        // find the first step that has been completed\n        const steps = getSteps();\n        activeStep = steps.findIndex((step, i) => !this.state.completed.has(i));\n      } else {\n        activeStep = this.state.activeStep + 1;\n      }\n\n      this.setState({\n        activeStep\n      });\n    };\n\n    this.handleBack = () => {\n      this.setState(state => ({\n        activeStep: state.activeStep - 1\n      }));\n    };\n\n    this.handleStep = step => () => {\n      this.setState({\n        activeStep: step\n      });\n    };\n\n    this.handleComplete = () => {\n      // eslint-disable-next-line react/no-access-state-in-setstate\n      const completed = new Set(this.state.completed);\n      completed.add(this.state.activeStep);\n      this.setState({\n        completed\n      });\n      /**\n       * Sigh... it would be much nicer to replace the following if conditional with\n       * `if (!this.allStepsComplete())` however state is not set when we do this,\n       * thus we have to resort to not being very DRY.\n       */\n\n      if (completed.size !== this.totalSteps() - this.skippedSteps()) {\n        this.handleNext();\n      }\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        activeStep: 0,\n        completed: new Set(),\n        skipped: new Set()\n      });\n    };\n  }\n\n  skippedSteps() {\n    return this.state.skipped.size;\n  }\n\n  isStepSkipped(step) {\n    return this.state.skipped.has(step);\n  }\n\n  isStepComplete(step) {\n    return this.state.completed.has(step);\n  }\n\n  completedSteps() {\n    return this.state.completed.size;\n  }\n\n  allStepsCompleted() {\n    return this.completedSteps() === this.totalSteps() - this.skippedSteps();\n  }\n\n  isLastStep() {\n    return this.state.activeStep === this.totalSteps() - 1;\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const steps = getSteps();\n    const {\n      activeStep\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Stepper, {\n      alternativeLabel: true,\n      nonLinear: true,\n      activeStep: activeStep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, steps.map((label, index) => {\n      const props = {};\n      const buttonProps = {};\n\n      if (this.isStepOptional(index)) {\n        buttonProps.optional = /*#__PURE__*/React.createElement(Typography, {\n          variant: \"caption\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 38\n          }\n        }, \"Optional\");\n      }\n\n      if (this.isStepSkipped(index)) {\n        props.completed = false;\n      }\n\n      return /*#__PURE__*/React.createElement(Step, Object.assign({\n        key: label\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(StepButton, Object.assign({\n        onClick: this.handleStep(index),\n        completed: this.isStepComplete(index)\n      }, buttonProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      }), label));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, this.allStepsCompleted() ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.instructions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, \"All steps completed - you\\\"re finished\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.instructions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, getStepContent(activeStep)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: activeStep === 0,\n      onClick: this.handleBack,\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleNext,\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, \"Next\"), this.isStepOptional(activeStep) && !this.state.completed.has(this.state.activeStep) && /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSkip,\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, \"Skip\"), activeStep !== steps.length && (this.state.completed.has(this.state.activeStep) ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.completed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, \"Step \", activeStep + 1, \" already completed\") : /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));\n  }\n\n}\n\nHorizontalNonLinearAlternativeLabelStepper.propTypes = {\n  classes: PropTypes.object\n};\nexport default withStyles(styles)(HorizontalNonLinearAlternativeLabelStepper);","map":{"version":3,"sources":["E:/D/admin/src/utils/demos/steppers/HorizontalNonLinearAlternativeLabelStepper.js"],"names":["React","PropTypes","withStyles","Stepper","Step","StepButton","Button","Typography","styles","theme","root","width","button","marginRight","spacing","backButton","completed","display","instructions","marginTop","marginBottom","getSteps","getStepContent","step","HorizontalNonLinearAlternativeLabelStepper","Component","state","activeStep","Set","skipped","totalSteps","length","isStepOptional","handleSkip","Error","setState","values","add","handleNext","isLastStep","allStepsCompleted","steps","findIndex","i","has","handleBack","handleStep","handleComplete","size","skippedSteps","handleReset","isStepSkipped","isStepComplete","completedSteps","render","classes","props","map","label","index","buttonProps","optional","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n});\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass HorizontalNonLinearAlternativeLabelStepper extends React.Component {\n  state = {\n    activeStep: 0,\n    completed: new Set(),\n    skipped: new Set(),\n  };\n\n  totalSteps = () => {\n    return getSteps().length;\n  };\n\n  isStepOptional = step => {\n    return step === 1;\n  };\n\n  handleSkip = () => {\n    const { activeStep } = this.state;\n    if (!this.isStepOptional(activeStep)) {\n      // You probably want to guard against something like this\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    this.setState(state => {\n      const skipped = new Set(state.skipped.values());\n      skipped.add(activeStep);\n      return {\n        activeStep: state.activeStep + 1,\n        skipped,\n      };\n    });\n  };\n\n  handleNext = () => {\n    let activeStep;\n\n    if (this.isLastStep() && !this.allStepsCompleted()) {\n      // It's the last step, but not all steps have been completed\n      // find the first step that has been completed\n      const steps = getSteps();\n      activeStep = steps.findIndex((step, i) => !this.state.completed.has(i));\n    } else {\n      activeStep = this.state.activeStep + 1;\n    }\n    this.setState({\n      activeStep,\n    });\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  handleStep = step => () => {\n    this.setState({\n      activeStep: step,\n    });\n  };\n\n  handleComplete = () => {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    const completed = new Set(this.state.completed);\n    completed.add(this.state.activeStep);\n    this.setState({\n      completed,\n    });\n\n    /**\n     * Sigh... it would be much nicer to replace the following if conditional with\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\n     * thus we have to resort to not being very DRY.\n     */\n    if (completed.size !== this.totalSteps() - this.skippedSteps()) {\n      this.handleNext();\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n      completed: new Set(),\n      skipped: new Set(),\n    });\n  };\n\n  skippedSteps() {\n    return this.state.skipped.size;\n  }\n\n  isStepSkipped(step) {\n    return this.state.skipped.has(step);\n  }\n\n  isStepComplete(step) {\n    return this.state.completed.has(step);\n  }\n\n  completedSteps() {\n    return this.state.completed.size;\n  }\n\n  allStepsCompleted() {\n    return this.completedSteps() === this.totalSteps() - this.skippedSteps();\n  }\n\n  isLastStep() {\n    return this.state.activeStep === this.totalSteps() - 1;\n  }\n\n  render() {\n    const { classes } = this.props;\n    const steps = getSteps();\n    const { activeStep } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n          {steps.map((label, index) => {\n            const props = {};\n            const buttonProps = {};\n            if (this.isStepOptional(index)) {\n              buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (this.isStepSkipped(index)) {\n              props.completed = false;\n            }\n            return (\n              <Step key={label} {...props}>\n                <StepButton\n                  onClick={this.handleStep(index)}\n                  completed={this.isStepComplete(index)}\n                  {...buttonProps}\n                >\n                  {label}\n                </StepButton>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {this.allStepsCompleted() ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&quot;re finished\n              </Typography>\n              <Button onClick={this.handleReset}>Reset</Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={this.handleBack}\n                  className={classes.button}\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.handleNext}\n                  className={classes.button}\n                >\n                  Next\n                </Button>\n                {this.isStepOptional(activeStep) &&\n                  !this.state.completed.has(this.state.activeStep) && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleSkip}\n                      className={classes.button}\n                    >\n                      Skip\n                    </Button>\n                  )}\n                {activeStep !== steps.length &&\n                  (this.state.completed.has(this.state.activeStep) ? (\n                    <Typography variant=\"caption\" className={classes.completed}>\n                      Step {activeStep + 1} already completed\n                    </Typography>\n                  ) : (\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleComplete}>\n                      {this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                    </Button>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nHorizontalNonLinearAlternativeLabelStepper.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(HorizontalNonLinearAlternativeLabelStepper);\n"]},"metadata":{},"sourceType":"module"}