{"ast":null,"code":"var _jsxFileName = \"D:\\\\admin\\\\src\\\\utils\\\\demos\\\\text-fields\\\\InputAdornments.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(1) * 3\n  },\n  textField: {\n    flexBasis: 200\n  }\n});\n\nconst ranges = [{\n  value: '0-20',\n  label: '0 to 20'\n}, {\n  value: '21-50',\n  label: '21 to 50'\n}, {\n  value: '51-100',\n  label: '51 to 100'\n}];\n\nclass InputAdornments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amount: '',\n      password: '',\n      weight: '',\n      weightRange: '',\n      showPassword: false\n    };\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.handleMouseDownPassword = event => {\n      event.preventDefault();\n    };\n\n    this.handleClickShowPassword = () => {\n      this.setState(state => ({\n        showPassword: !state.showPassword\n      }));\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      label: \"With normal TextField\",\n      id: \"simple-start-adornment\",\n      className: classNames(classes.margin, classes.textField),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }\n        }, \"Kg\")\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      select: true,\n      label: \"With Select\",\n      className: classNames(classes.margin, classes.textField),\n      value: this.state.weightRange,\n      onChange: this.handleChange('weightRange'),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }\n        }, \"Kg\")\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, ranges.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, option.label))), /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      className: classes.margin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"adornment-amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(Input, {\n      id: \"adornment-amount\",\n      value: this.state.amount,\n      onChange: this.handleChange('amount'),\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      }, \"$\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      className: classNames(classes.margin, classes.withoutLabel, classes.textField),\n      \"aria-describedby\": \"weight-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"adornment-weight\",\n      value: this.state.weight,\n      onChange: this.handleChange('weight'),\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 27\n        }\n      }, \"Kg\"),\n      inputProps: {\n        'aria-label': 'Weight'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormHelperText, {\n      id: \"weight-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"Weight\")), /*#__PURE__*/React.createElement(FormControl, {\n      className: classNames(classes.margin, classes.textField),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"adornment-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      id: \"adornment-password\",\n      type: this.state.showPassword ? 'text' : 'password',\n      value: this.state.password,\n      onChange: this.handleChange('password'),\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"Toggle password visibility\",\n        onClick: this.handleClickShowPassword,\n        onMouseDown: this.handleMouseDownPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, this.state.showPassword ? /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 46\n        }\n      }) : /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 66\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(InputAdornments);","map":{"version":3,"sources":["D:/admin/src/utils/demos/text-fields/InputAdornments.js"],"names":["React","classNames","PropTypes","withStyles","IconButton","Input","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","MenuItem","Visibility","VisibilityOff","styles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","flexBasis","ranges","value","label","InputAdornments","Component","state","amount","password","weight","weightRange","showPassword","handleChange","prop","event","setState","target","handleMouseDownPassword","preventDefault","handleClickShowPassword","render","classes","props","startAdornment","map","option","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(1) * 3,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n});\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nclass InputAdornments extends React.Component {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          label=\"With normal TextField\"\n          id=\"simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n        <TextField\n          select\n          label=\"With Select\"\n          className={classNames(classes.margin, classes.textField)}\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <FormControl fullWidth className={classes.margin}>\n          <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n          <Input\n            id=\"adornment-amount\"\n            value={this.state.amount}\n            onChange={this.handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </FormControl>\n        <FormControl\n          className={classNames(classes.margin, classes.withoutLabel, classes.textField)}\n          aria-describedby=\"weight-helper-text\"\n        >\n          <Input\n            id=\"adornment-weight\"\n            value={this.state.weight}\n            onChange={this.handleChange('weight')}\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n            inputProps={{\n              'aria-label': 'Weight',\n            }}\n          />\n          <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n        </FormControl>\n        <FormControl className={classNames(classes.margin, classes.textField)}>\n          <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n          <Input\n            id=\"adornment-password\"\n            type={this.state.showPassword ? 'text' : 'password'}\n            value={this.state.password}\n            onChange={this.handleChange('password')}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                  onMouseDown={this.handleMouseDownPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InputAdornments);\n"]},"metadata":{},"sourceType":"module"}